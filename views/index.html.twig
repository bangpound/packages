{% set repository = { repositories: [{ type: 'composer', url: url }]} %}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="robots" content="noindex,nofollow" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{{ name }} Composer Repository</title>
    <link rel="stylesheet" href="vendor/pure/base.css" />
    <link rel="stylesheet" href="vendor/pure/forms.css" />
    <link rel="stylesheet" href="vendor/pure/grids.css" />
    <link rel="stylesheet" href="vendor/pure/tables.css" />
    <style type="text/css">
{% include 'styles.css' %}
    </style>
</head>
<body ng-app="satisBrowser">

<div class="pure-g" ng-controller="mainController as main">
    <div class="pure-u-1-1">
        <h1>{{ name }} Composer Repository</h1>
        {% if description %}
            <p>{{ description | raw }}</p>
        {% endif %}
        <p>
            Last updated: <time datetime="{{ "now" | date(constant('\DateTime::ISO8601')) }}">{% verbatim %}{{ main.lastUpdate|date }}{% endverbatim %}</time>
        </p>
        <form class="pure-form">
            <label for="search">
                Filter by package name:
            </label>
            <input type="text" id="search" ng-model="search.highest.name" autocomplete="off" autofocus />
        </form>
    </div>
    <div class="pure-u-1-1">
        <h2>Adding the repository to <em>composer.json</em>:</h2>
        <pre><code>{{ repository | json_encode(constant('JSON_PRETTY_PRINT') b-or constant('JSON_UNESCAPED_SLASHES')) | raw }}</code></pre>
    </div>

    {% verbatim %}
    <div class="pure-u-1-1" ng-repeat="package in main.packages | filter:search">
        <h3 id="{{ package.highest.name }}">{{ package.highest.name }}</h3>
        <p ng-if="package.highest.description">{{ package.highest.description }}</p>
        <table class="pure-table">
            <tr ng-if="package.highest.homepage">
                <th>Homepage</th>
                <td><a href="{{ package.highest.homepage }}">{{ package.highest.homepage }}</a></td>
            </tr>
            <tr ng-if="package.highest.license">
                <th>License</th>
                <td>{{ package.highest.license.join(', ') }}</td>
            </tr>
            <tr ng-if="package.highest.authors">
                <th>Authors</th>
                <td>
                    <span ng-repeat="author in package.highest.authors" ng-switch="author.homepage.length > 0">
                        <a ng-switch-when="true" href="{{ author.homepage }}">{{ author.name }}</a>
                        <span ng-switch-default>{{ author.name }}</span>
                    </span>
                </td>
            </tr>
            <tr ng-if="package.highest.support">
                <th>Support</th>
                <td>
                    <ul>
                        <li ng-repeat="(support_type, support_url) in package.highest.support">{{ support_type | capitalize }}: <a href="{{ support_url }}">{{ support_url }}</a></li>
                    </ul>
                </td>
            </tr>
            <tr>
                <th>Releases</th>
                <td>
                    <span ng-repeat="version in package.versions" ng-switch="version.dist.type.length > 0">
                        <a ng-switch-when="true" href="{{ version.dist.url }}" title="{{ version.dist.reference }}">{{ version.version }}</a>
                        <a ng-switch-default href="{{ version.source.url }}" title="{{ version.source.reference }}">{{ version.version }}</a>
                    </span>
                </td>
            </tr>
            <tr>
                <th>Required by</th>
                <td>
                    <ul>
                        <li ng-repeat="dependency in main.dependencies[package.highest.name]"><a href="#{{ dependency }}">{{ dependency }}</a></li>
                    </ul>
                </td>
            </tr>
        </table>
    </div>
    {% endverbatim %}
    <div class="pure-u-1-1">
        <p><small>This Composer Repository is proudly powered by <a href="https://github.com/composer/satis">Satis</a> {{ constant('Composer\\Satis\\Satis::VERSION') }} - Last updated:  {{ "now"|date(constant('\DateTime::ISO8601')) }}</small></p>
    </div>
</div>

<script src="vendor/angularjs/angular.js"></script>
{% spaceless %}
{% set normalizedPackages = [] %}
{% for package in packages %}
    {% set normalizedVersions = [] %}
    {% for version in package.versions %}
        {% set normalizedVersion = {
            'dist': {
                'reference': version.distReference,
                'type': version.distType,
                'url': version.distUrl,
            },
            'source': {
              'reference': version.sourceReference,
              'url': version.sourceUrl,
            },
            'version': version.prettyVersion,
        } %}
        {% set normalizedVersions = normalizedVersions | merge([normalizedVersion]) %}
    {% endfor %}
    {% set normalizedPackage = {
        'highest': {
            'name': package.highest.name,
            'description': package.highest.description,
            'homepage': package.highest.homepage,
            'license': package.highest.license,
            'authors': package.highest.authors,
            'support': package.highest.support,
        },
        'versions': normalizedVersions,
    } %}
    {% set normalizedPackages = normalizedPackages | merge([normalizedPackage]) %}
{% endfor %}
{% endspaceless %}
<script>
    angular
        .module('satisBrowser', [])
        .value('packages', {{ normalizedPackages | json_encode | raw }})
        .value('dependencies', {{ dependencies | json_encode | raw }})
        .value('lastUpdate', new Date({{ "now" | date(constant('\DateTime::RFC2822')) | json_encode | raw }}))
        .filter('capitalize', function() {
            return function(input, all) {
                return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';
            }
        })
        .controller('mainController', ['packages', 'dependencies', 'lastUpdate', function (packages, dependencies, lastUpdate) {
            this.packages = packages;
            this.dependencies = dependencies;
            this.lastUpdate = lastUpdate;
        }]);
</script>
</body>
</html>
